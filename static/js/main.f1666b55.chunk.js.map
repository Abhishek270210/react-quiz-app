{"version":3,"sources":["Components/Answers/Answers.js","Components/Questions/Questions.js","Components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Answers","props","array","Object","keys","answer","map","ans","className","correctAnswer","clickedAnswer","onClick","checkAnswer","disabled","console","log","Questions","Badge","variant","questionNo","question","Quiz","state","questions","1","2","3","4","5","answers","correctAnswers","clickedAns","score","step","view","setState","nextStep","viewResult","this","length","ProgressBar","now","label","srOnly","Button","size","active","Table","striped","bordered","hover","Component","App","Jumbotron","fluid","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1666b55.chunk.js","sourcesContent":["import React from 'react'\nimport './Answer.css';\n\nconst Answers = (props) => {\n    let array = Object.keys(props.answer).map((ans) => (\n        <li\n            className=\n            {\n                props.correctAnswer === ans ?\n                    'correct' :\n                    props.clickedAnswer === ans ?\n                        'incorrect' : ''\n            }\n            key={ans}\n            onClick={() => props.checkAnswer(ans)} >{props.answer[ans]}\n        </li>\n    ))\n    return (\n        <>\n            <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\n                {console.log(props.clickedAnswer)}\n                {array}\n            </ul>\n            <div className=\"Response\" >\n                {\n                    props.correctAnswer ? 'Correct Answer!' :\n                        props.clickedAnswer ? 'Incorrect Answer!' : ''\n                }\n            </div>\n        </>\n    )\n}\nexport default Answers","import React from 'react'\nimport './Question.css';\nimport {Badge} from 'react-bootstrap'\n\nconst Questions = (props) => {\n    return (\n        <div>\n            <h1>\n                <Badge variant=\"secondary\">Question No {props.questionNo}</Badge>\n            </h1>\n            <h1>{props.question}</h1>\n        </div>\n    )\n}\n\nexport default Questions","import React, { Component } from 'react'\nimport Answers from './Answers/Answers'\nimport Questions from './Questions/Questions'\nimport './QuizMain.css';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\n\n\nclass Quiz extends Component {\n    state = {\n        questions: {\n            1: 'How is COVID-19 passed on?',\n            2: 'What are the common symptoms of COVID-19?',\n            3: 'Can you always tell if someone has COVID-19? ',\n            4: 'Can washing your hands protect you from COVID-19? ',\n            5: 'When should fabric face masks be worn?'\n        },\n        answers: {\n            1: {\n                1: 'Through droplets that come from your mouth and nose when you cough or breathe out',\n                2: 'In sexual fluids, including semen, vaginal fluids or anal mucous',\n                3: 'By drinking unclean water',\n                4: 'All of the above'\n\n            },\n            2: {\n                1: 'A new and continuous cough',\n                2: 'Fever',\n                3: 'Tiredness',\n                4: 'All of the above'\n            },\n            3: {\n                1: 'No – not everyone with COVID-19 has symptoms',\n                2: 'Yes – it will be obvious, a person with COVID-19 coughs a lot',\n                3: 'Yes – you can tell just by where a person comes from, their race and ethnicity',\n                4: 'None of the above'\n            },\n            4: {\n                1: 'Yes – but only if you use a strong bleach',\n                2: 'Yes – normal soap and water or hand sanitizer is enough',\n                3: 'No – Washing your hands doesn’t stop COVID-19',\n                4: 'None of the above'\n            },\n            5: {\n                1: 'On public transport',\n                2: 'In confined or crowded spaces',\n                3: 'In small shops',\n                4: 'All of the above'\n            }\n        },\n        correctAnswers: {\n            1: '1',\n            2: '4',\n            3: '1',\n            4: '2',\n            5: '4'\n        },\n        clickedAns: {\n            1: '0',\n            2: '0',\n            3: '0',\n            4: '0',\n            5: '0'\n        },\n        correctAnswer: 0,\n        score: 0,\n        step: 1,\n        clickedAnswer: 0,\n        view: false\n    }\n\n\n    checkAnswer = (ans) => {\n        let { correctAnswers, step, score,clickedAns } = this.state\n        console.log(correctAnswers[step])\n        clickedAns[step] = ans\n        console.log(clickedAns[step])\n        if (ans === correctAnswers[step]) {\n            this.setState({\n                score: score + 1,\n                correctAnswer: correctAnswers[step],\n\n            })\n        }\n        else {\n            this.setState({\n                correctAnswer: 0\n            })\n        }\n        this.setState({\n            clickedAnswer: ans,\n            // clickedAns[step]: ans\n        })\n\n    }\n    nextStep = (step) => {\n        this.setState({\n            step: step + 1,\n            clickedAnswer: 0,\n            correctAnswer: 0\n        })\n    }\n    viewResult = () => {\n        this.setState({\n            view: true\n        })\n        console.log(this.state.clickedAns[1])\n        console.log(this.state.clickedAns[2])\n        console.log(this.state.clickedAns[3])\n    }\n    render() {\n        // let now = (step/Object.keys(questions).length)*100;\n        let now = 0\n        let { step, questions, answers, correctAnswer, clickedAnswer, score, clickedAns, view } = this.state\n        return (\n            <div className=\"Content\">\n\n                { step <= Object.keys(questions).length ?\n                    <>  <ProgressBar variant=\"warning\" className=\"progressBar\" now={(step / Object.keys(questions).length) * 100} label={`${now}%`} srOnly />\n                        <Questions\n                            question={questions[step]} questionNo={step}\n                        />\n                        <Answers\n                            answer={answers[step]}\n                            checkAnswer={this.checkAnswer}  // another way check on google \n                            correctAnswer={correctAnswer}\n                            clickedAnswer={clickedAnswer}\n                        />\n                        <button\n                            className=\"NextStep\"\n                            disabled={\n                                clickedAnswer && Object.keys(questions).length >= step ? false : true\n                            }\n                            onClick={() => this.nextStep(step)}\n                        >\n                            Next\n               </button>\n                    </> :\n                    <div className=\"finalPage\">\n                        <h1>Congratulations!</h1> <h3>You have Successfully Completed the Quiz</h3>\n                        <p>You Scored   {score} / {Object.keys(questions).length}</p>\n                        <>\n                            <Button disabled={view ? true : false} className=\"resultButton\" variant=\"success\" size=\"lg\" onClick={this.viewResult} active >View Result</Button>\n                            {\n                                view ?\n                                    <div>\n                                        {\n\n                                            Object.keys(clickedAns).map((ans) => (\n                                                <div>\n                                                    {/* // clickedAns[ans]===this.state.correctAnswers[ans]? 'Correct Ans': 'Incorrect Ans' */}\n                                                    <Table striped bordered hover className=\"responseTable\">\n                                                        <thead>\n                                                            <tr className=\"thead\">\n                                                                <th>#</th>\n                                                                <th>Status</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody className=\"tbody\">\n                                                            {clickedAns[ans] === this.state.correctAnswers[ans] ?\n                                                                <tr>\n                                                                    <td>{ans}</td>\n                                                                    <td className=\"correct\">Correct Answer !</td>\n                                                                </tr> :\n                                                                <tr>\n                                                                    <td>{ans}</td>\n                                                                    <td className=\"incorrect\">Incorrect Answer!</td>\n                                                                </tr>\n                                                            }\n                                                        </tbody>\n                                                    </Table>\n                                                </div>\n                                            ))\n                                        }\n                                    </div>\n                                    : null\n                            }\n                        </>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Quiz\n","import './App.css';\nimport Quiz from './Components/Quiz'\nimport {Jumbotron,Badge,Container} from 'react-bootstrap'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jumbotron fluid className=\"container w-50 text-center py-0\">\n        <Container>\n          <h1>\n            <Badge variant=\"secondary\">General Quiz App !!!</Badge>\n          </h1>\n        </Container>\n      </Jumbotron>\n      <Quiz />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}